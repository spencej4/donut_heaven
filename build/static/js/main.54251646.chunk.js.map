{"version":3,"sources":["components/Header/index.js","components/Hero/index.js","components/Container/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","this","props","score","topScore","React","Component","Hero","Container","Container_Card","checkForDuplicates","Card","_this","images","link","key","array","i","length","j","Math","floor","random","_ref","shuffleArray","map","item","value","id","onClick","event","preventDefault","handleClick","src","alt","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","runComparison","state","clickedItems","push","calcScore","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","alert","setState","gameActive","err","return","bind","assertThisInitialized","Header_Header","components_Hero","Container_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54251646.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Header extends React.Component {\n  render() {\n      return (\n        <div className='header'>\n            <p className='logo'>Clicky</p>\n            <p className='instructions'>Click an image to begin!</p>\n            <p className='scores'>Score:{this.props.score} | TopScore:{this.props.topScore}</p>\n        </div>\n      );\n  }\n}","import React from \"react\";\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero\"><p className='middle'>_Donut Heaven_</p></div>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\n\nexport default class Container extends React.Component {\n    render() {\n      return (\n        <div className='container'>\n            <Card\n              checkForDuplicates={this.props.checkForDuplicates}\n              score={this.props.score}\n            />\n        </div>\n      )\n    }\n}\n\nclass Card extends React.Component { \n    render() {\n        const images = [\n            {\n              link: 'https://photo2.foodgawker.com/wp-content/uploads/2019/03/3393004.jpg',\n              key: 0\n            },\n            {\n              link: 'https://photo.foodgawker.com/wp-content/uploads/2019/02/3387319.jpg',\n              key: 2\n            },\n            {\n              link: 'https://photo.foodgawker.com/wp-content/uploads/2019/02/3384831.jpg',\n              key: 3\n            },\n            {\n              link: 'https://photo.foodgawker.com/wp-content/uploads/2019/02/3383607.jpg',\n              key: 4\n            },\n            {\n              link: 'https://photo.foodgawker.com/wp-content/uploads/2019/02/3382343.jpg',\n              key: 5\n            },\n            {\n              link: 'https://photo.foodgawker.com/wp-content/uploads/2019/02/3380227.jpg',\n              key: 6\n            },\n            {\n              link: 'https://photo.foodgawker.com/wp-content/uploads/2019/01/3359963.jpg',\n              key: 7\n            },\n            {\n              link: 'https://photo2.foodgawker.com/wp-content/uploads/2018/12/3350447.jpg',\n              key: 8\n            },\n            {\n              link: 'https://photo2.foodgawker.com/wp-content/uploads/2019/01/3362759.jpg',\n              key: 9\n            },\n            {\n              link: 'https://photo2.foodgawker.com/wp-content/uploads/2018/12/3355340.jpg',\n              key: 10\n            },\n            {\n              link: 'https://photo.foodgawker.com/wp-content/uploads/2018/10/3323959.jpg',\n              key: 11\n            },\n            {\n              link: 'https://photo2.foodgawker.com/wp-content/uploads/2018/09/3302988.jpg',\n              key: 12\n            },\n        ];\n\n    const handleClick = (event, key) => {\n        event.preventDefault();\n        this.props.checkForDuplicates(key);\n    }\n\n    function shuffleArray(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    shuffleArray(images);\n      return images.map((item, key) => (\n          <div\n              className=\"card\"\n              key={item.key}\n              value={item.id}\n              onClick={(event) => handleClick(event, key)} \n          >\n          <img src={item.link} alt=\"donut\"></img>\n          </div>\n      ));\n    } \n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Hero from \"./components/Hero\";\nimport Container from \"./components/Container\";\n\n\nclass App extends Component {\n  constructor(props) {\n      super(props)\n      this.state = {\n          gameActive: true,\n          score: 0,\n          topScore: 0,\n          clickedItems: []\n      };\n      this.checkForDuplicates = this.checkForDuplicates.bind(this);\n      this.runComparison = this.runComparison.bind(this);\n      this.calcScore = this.calcScore.bind(this);\n  }\n\n  \n  checkForDuplicates(key) {\n        this.runComparison(key);\n  };\n\n  runComparison = (key) =>{\n      if(this.state.clickedItems.length === 0) {\n        this.state.clickedItems.push(key)\n        this.calcScore();\n        return \n      }\n      else{\n        for (let item of this.state.clickedItems) {\n          if(item === key) {\n              // clicked item HAS already been clicked\n              alert('game over');\n              this.setState({\n                gameActive: false,\n                score: 0,\n                clickedItems: []\n              })\n              break\n          }\n          else if(item !== key){\n              // clicked item has NOT been clicked before\n              this.calcScore();\n          } \n        }\n      }\n      this.state.clickedItems.push(key)\n    };\n\n    calcScore = () => {\n      if (this.state.score >= this.state.topScore){\n        this.setState({\n          score: this.state.score + 1,\n          topScore: this.state.topScore + 1,\n        })\n      }else if (this.state.score < this.state.topScore) {\n        this.setState({\n          score: this.state.score + 1,\n        })\n      }\n    }\n          \n\n    render() {\n      return (\n        <div className=\"App\">\n          <Header \n            gameActive={this.state.gameActive}\n            score={this.state.score}\n            topScore={this.state.topScore}\n          />\n          <Hero />\n          <Container \n            checkForDuplicates={this.checkForDuplicates}\n            score={this.state.score}\n          />\n        </div>\n      );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}